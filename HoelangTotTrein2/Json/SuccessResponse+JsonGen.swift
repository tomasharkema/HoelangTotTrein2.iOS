//
//  SuccessResponse+JsonGen.swift
//
//  Auto generated by swift-json-gen on Sat, 23 Jan 2016 12:31:24 GMT
//  See for details: https://github.com/tomlokhorst/swift-json-gen
//

import Foundation

extension SuccessResult {
  static func decodeJson(json: AnyObject) throws -> SuccessResult {
    guard let dict = json as? [String : AnyObject] else {
      throw JsonDecodeError.WrongType(rawValue: json, expectedType: "Object")
    }

    var errors: [String: JsonDecodeError] = [:]

    var success_optional: Bool?

    if let success_field: AnyObject = dict["success"] {
      do {
        success_optional = try Bool.decodeJson(success_field)
      }
      catch let error as JsonDecodeError {
        errors["success"] = error
      }
    }
    else {
      errors["success"] = JsonDecodeError.MissingField
    }

    guard
      let success = success_optional
    else {
      throw JsonDecodeError.StructErrors(type: "SuccessResult", errors: errors)
    }

    return SuccessResult(success: success)
  }

  func encodeJson() -> [String: AnyObject] {
    var dict: [String: AnyObject] = [:]

    dict["success"] = success.encodeJson()

    return dict
  }
}
