// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift

import Foundation
import Rswift
import UIKit

struct R: Rswift.Validatable {
  static func validate() throws {
    try intern.validate()
  }
  
  struct file {
    static let bgPng = FileResource(bundle: _R.hostingBundle, name: "bg", pathExtension: "png")
    
    static func bgPng(_: Void) -> NSURL? {
      let fileResource = R.file.bgPng
      return fileResource.bundle?.URLForResource(fileResource)
    }
    
    static func bgPng(_: Void) -> String? {
      let fileResource = R.file.bgPng
      return fileResource.bundle?.pathForResource(fileResource)
    }
  }
  
  struct font {
    
  }
  
  struct image {
    
  }
  
  private struct intern: Rswift.Validatable {
    static func validate() throws {
      try _R.validate()
    }
  }
  
  struct nib {
    
  }
  
  struct reuseIdentifier {
    static let stationCell: ReuseIdentifier<StationCell> = ReuseIdentifier(identifier: "StationCell")
  }
  
  struct segue {
    struct tickerViewController {
      static let presentPickerSegue: StoryboardSegueIdentifier<UIStoryboardSegue, TickerViewController, PickerViewController> = StoryboardSegueIdentifier(identifier: "presentPickerSegue")
      
      static func presentPickerSegue(segue segue: UIStoryboardSegue) -> TypedStoryboardSegueInfo<UIStoryboardSegue, TickerViewController, PickerViewController>? {
        return TypedStoryboardSegueInfo(segueIdentifier: R.segue.tickerViewController.presentPickerSegue, segue: segue)
      }
    }
  }
  
  struct storyboard {
    static let launchScreen = _R.storyboard.launchScreen()
    static let main = _R.storyboard.main()
    
    static func launchScreen(_: Void) -> UIStoryboard {
      return UIStoryboard(resource: R.storyboard.launchScreen)
    }
    
    static func main(_: Void) -> UIStoryboard {
      return UIStoryboard(resource: R.storyboard.main)
    }
  }
}

struct _R: Rswift.Validatable {
  static let hostingBundle = NSBundle(identifier: "nl.tomasharkema.HoelangTotTrein")
  
  static func validate() throws {
    try storyboard.validate()
  }
  
  struct nib {
    
  }
  
  struct storyboard: Rswift.Validatable {
    static func validate() throws {
      try launchScreen.validate()
      try main.validate()
    }
    
    struct launchScreen: Rswift.Validatable, StoryboardResourceWithInitialControllerType {
      typealias InitialController = UIViewController
      
      let bundle = _R.hostingBundle
      let name = "LaunchScreen"
      
      static func validate() throws {
        if UIImage(named: "bg") == nil { throw ValidationError(description: "[R.swift] Image named 'bg' is used in storyboard 'LaunchScreen', but couldn't be loaded.") }
      }
    }
    
    struct main: Rswift.Validatable, StoryboardResourceWithInitialControllerType {
      typealias InitialController = TickerViewController
      
      let bundle = _R.hostingBundle
      let name = "Main"
      
      func pickerViewController() -> PickerViewController? {
        return UIStoryboard(resource: self).instantiateViewControllerWithIdentifier("PickerViewController") as? PickerViewController
      }
      
      static func validate() throws {
        if UIImage(named: "bg.png") == nil { throw ValidationError(description: "[R.swift] Image named 'bg.png' is used in storyboard 'Main', but couldn't be loaded.") }
        if _R.storyboard.main().pickerViewController() == nil { throw ValidationError(description:"[R.swift] ViewController with identifier 'pickerViewController' could not be loaded from storyboard 'Main' as 'PickerViewController'.") }
      }
    }
  }
}