//
//  Test01+JsonGen.swift
//
//  Auto generated by swift-json-gen on Wed, 29 Jul 2015 08:09:39 GMT
//

import Foundation

extension Test01 {
  static func decodeJson(json: AnyObject) -> Test01? {
    let _dict = json as? [String : AnyObject]
    if _dict == nil { return nil }
    let dict = _dict!

    let one_field: AnyObject? = dict["one"]
    if one_field == nil { assertionFailure("field 'one' is missing"); return nil }
    let one_optional: Int? = Int.decodeJson(one_field!)
    if one_optional == nil { assertionFailure("field 'one' is not Int"); return nil }
    let one: Int = one_optional!

    let two_field: AnyObject? = dict["two"]
    let two: String? = two_field == nil ? nil : Optional.decodeJson({ String.decodeJson($0) }, two_field!)

    return Test01(one: one, two: two)
  }

  func encodeJson() -> AnyObject {
    var dict: [String: AnyObject] = [:]

    dict["one"] = one.encodeJson()
    dict["two"] = two.encodeJson({ $0.encodeJson() })

    return dict
  }
}
