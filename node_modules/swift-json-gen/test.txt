(source_file
  (import_decl Foundation')
  (typealias "MyInt" type='MyInt.Type' access=internal type='Int')
  (struct_decl "Test02" type='Test02.Type' access=internal
    (var_decl "one" type='MyInt' access=internal let storage_kind=stored)
    (pattern_binding_decl
      (pattern_typed type='MyInt'
        (pattern_named type='MyInt' 'one')
        (type_ident
          (component id='MyInt' bind=type))))
    (var_decl "two" type='String?' access=internal let storage_kind=stored)
    (pattern_binding_decl
      (pattern_typed type='String?'
        (pattern_named type='String?' 'two')
))
    (var_decl "sub" type='Sub' access=internal let storage_kind=stored)
    (pattern_binding_decl
      (pattern_typed type='Sub'
        (pattern_named type='Sub' 'sub')
        (type_ident
          (component id='Sub' bind=type))))
    (constructor_decl implicit "init(one:two:sub:)" type='Test02.Type -> (one: MyInt, two: String?, sub: Sub) -> Test02' access=internal designated
      (body_params
        (pattern_typed implicit type='inout Test02'
          (pattern_named implicit type='inout Test02' 'self'))
        (pattern_tuple type='(one: MyInt, two: String?, sub: Sub)'
          (pattern_typed implicit type='MyInt'
            (pattern_named type='MyInt' 'one'))
          (pattern_typed implicit type='String?'
            (pattern_named type='String?' 'two'))
          (pattern_typed implicit type='Sub'
            (pattern_named type='Sub' 'sub'))))))
  (struct_decl "Sub" type='Sub.Type' access=internal
    (var_decl "one" type='NSURL' access=internal let storage_kind=stored)
    (pattern_binding_decl
      (pattern_typed type='NSURL'
        (pattern_named type='NSURL' 'one')
        (type_ident
          (component id='NSURL' bind=type))))
    (var_decl "two" type='NSDate' access=internal let storage_kind=stored)
    (pattern_binding_decl
      (pattern_typed type='NSDate'
        (pattern_named type='NSDate' 'two')
        (type_ident
          (component id='NSDate' bind=type))))
    (func_decl "decode(_:)" type='Sub.Type -> (AnyObject) -> Sub?' access=internal type
      (body_params
        (pattern_typed implicit type='Sub.Type'
          (pattern_named implicit type='Sub.Type' 'self'))
        (pattern_tuple type='(AnyObject)'
          (pattern_typed type='AnyObject'
            (pattern_named type='AnyObject' 'json')
            (type_ident
              (component id='AnyObject' bind=type)))))
      (result
)
      (brace_stmt
        (return_stmt
          (inject_into_optional implicit type='Sub?' location=tests/Test02.swift:16:12 range=[tests/Test02.swift:16:12 - line:16:43]
            (call_expr type='Sub' location=tests/Test02.swift:16:12 range=[tests/Test02.swift:16:12 - line:16:43]
              (constructor_ref_call_expr type='(one: NSURL, two: NSDate) -> Sub' location=tests/Test02.swift:16:12 range=[tests/Test02.swift:16:12 - line:16:12]
                (declref_expr implicit type='Sub.Type -> (one: NSURL, two: NSDate) -> Sub' location=tests/Test02.swift:16:12 range=[tests/Test02.swift:16:12 - line:16:12] decl=Test02.(file).Sub.init(one:two:)@tests/Test02.swift:11:8 specialized=no)
                (type_expr type='Sub.Type' location=tests/Test02.swift:16:12 range=[tests/Test02.swift:16:12 - line:16:12] typerepr='Sub'))
              (tuple_expr type='(one: NSURL, two: NSDate)' location=tests/Test02.swift:16:15 range=[tests/Test02.swift:16:15 - line:16:43] names=one,two
                (call_expr type='NSURL' location=tests/Test02.swift:16:21 range=[tests/Test02.swift:16:21 - line:16:27]
                  (constructor_ref_call_expr type='() -> NSURL' location=tests/Test02.swift:16:21 range=[tests/Test02.swift:16:21 - line:16:21]
                    (declref_expr implicit type='NSURL.Type -> () -> NSURL' location=tests/Test02.swift:16:21 range=[tests/Test02.swift:16:21 - line:16:21] decl=Foundation.(file).NSURL.init() specialized=no)
                    (type_expr type='NSURL.Type' location=tests/Test02.swift:16:21 range=[tests/Test02.swift:16:21 - line:16:21] typerepr='NSURL'))
                  (tuple_expr type='()' location=tests/Test02.swift:16:26 range=[tests/Test02.swift:16:26 - line:16:27]))
                (call_expr type='NSDate' location=tests/Test02.swift:16:35 range=[tests/Test02.swift:16:35 - line:16:42]
                  (constructor_ref_call_expr type='() -> NSDate' location=tests/Test02.swift:16:35 range=[tests/Test02.swift:16:35 - line:16:35]
                    (declref_expr implicit type='NSDate.Type -> () -> NSDate' location=tests/Test02.swift:16:35 range=[tests/Test02.swift:16:35 - line:16:35] decl=Foundation.(file).NSDate.init() specialized=no)
                    (type_expr type='NSDate.Type' location=tests/Test02.swift:16:35 range=[tests/Test02.swift:16:35 - line:16:35] typerepr='NSDate'))
                  (tuple_expr type='()' location=tests/Test02.swift:16:41 range=[tests/Test02.swift:16:41 - line:16:42]))))))))
    (constructor_decl implicit "init(one:two:)" type='Sub.Type -> (one: NSURL, two: NSDate) -> Sub' access=internal designated
      (body_params
        (pattern_typed implicit type='inout Sub'
          (pattern_named implicit type='inout Sub' 'self'))
        (pattern_tuple type='(one: NSURL, two: NSDate)'
          (pattern_typed implicit type='NSURL'
            (pattern_named type='NSURL' 'one'))
          (pattern_typed implicit type='NSDate'
            (pattern_named type='NSDate' 'two'))))))
  (extension_decl Test02
    (func_decl "encodeJson()" type='Test02 -> () -> AnyObject' access=internal
      (body_params
        (pattern_typed implicit type='Test02'
          (pattern_named implicit type='Test02' 'self'))
        (pattern_tuple type='()'))
      (result
        (type_ident
          (component id='AnyObject' bind=type)))
      (brace_stmt
        (var_decl "dict" type='[String : AnyObject]' access=private storage_kind=stored)

        (pattern_binding_decl
          (pattern_typed type='[String : AnyObject]'
            (pattern_named type='[String : AnyObject]' 'dict')
            (type_dictionary
              (type_ident
                (component id='String' bind=type))
              (type_ident
                (component id='AnyObject' bind=type))))
          (dictionary_expr type='[String : AnyObject]' location=tests/Test02.swift:22:37 range=[tests/Test02.swift:22:37 - line:22:39]
            (tuple_expr type='()' location=tests/Test02.swift:22:37 range=[tests/Test02.swift:22:37 - line:22:39]))

        (return_stmt
          (erasure_expr implicit type='AnyObject' location=tests/Test02.swift:24:12 range=[tests/Test02.swift:24:12 - line:24:12]
            (call_expr implicit type='NSDictionary' location=tests/Test02.swift:24:12 range=[tests/Test02.swift:24:12 - line:24:12]
              (dot_syntax_call_expr type='() -> NSDictionary' location=tests/Test02.swift:24:12 range=[tests/Test02.swift:24:12 - line:24:12]
                (declref_expr implicit type='(Dictionary<String, AnyObject>) -> () -> NSDictionary' location=tests/Test02.swift:24:12 range=[tests/Test02.swift:24:12 - line:24:12] decl=Foundation.(file).Dictionary._bridgeToObjectiveC() [with Key=String, Value=AnyObject] specialized=no)
                (load_expr implicit type='[String : AnyObject]' location=tests/Test02.swift:24:12 range=[tests/Test02.swift:24:12 - line:24:12]
                  (declref_expr type='@lvalue [String : AnyObject]' location=tests/Test02.swift:24:12 range=[tests/Test02.swift:24:12 - line:24:12] decl=Test02.(file).Test02.func decl.dict@tests/Test02.swift:22:9 specialized=no)))
              (tuple_expr implicit type='()' location=tests/Test02.swift:24:12 range=[tests/Test02.swift:24:12 - line:24:12]))))))))
