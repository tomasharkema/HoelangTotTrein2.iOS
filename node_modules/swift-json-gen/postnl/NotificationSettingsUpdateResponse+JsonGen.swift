//
//  NotificationSettingsUpdateResponse+JsonGen.swift
//
//  Auto generated by swift-json-gen on Thu, 06 Aug 2015 13:12:53 GMT
//

import Foundation

extension NotificationSettingsUpdateResponse {
  static func decodeJson(json: AnyObject) -> NotificationSettingsUpdateResponse? {
    guard let dict = json as? [String : AnyObject] else {
      assertionFailure("json not a dictionary");
      return nil
    }

    guard let deviceSettings_field: AnyObject? = dict["deviceSettings"] else {
      assertionFailure("field 'deviceSettings' is missing")
      return nil
    }
    guard let deviceSettings: NotificationSettingsResponse = NotificationSettingsResponse.decodeJson(deviceSettings_field!) else {
      assertionFailure("field 'deviceSettings' is not a NotificationSettingsResponse")
      return nil
    }

    let affectedShipments_field: AnyObject? = dict["affectedShipments"]
    let affectedShipments: [[String : AnyObject]]? = affectedShipments_field == nil ? nil : Optional.decodeJson({ Array.decodeJson({ $0 as? JsonObject }, $0) }, affectedShipments_field!)

    return NotificationSettingsUpdateResponse(deviceSettings: deviceSettings, affectedShipments: affectedShipments)
  }

  func encodeJson() -> AnyObject {
    var dict: [String: AnyObject] = [:]

    dict["deviceSettings"] = deviceSettings.encodeJson()
    dict["affectedShipments"] = affectedShipments.encodeJson({ $0.encodeJson({ $0.encodeJson({ $0.encodeJson() }, { $0 }) }) })

    return dict
  }
}
