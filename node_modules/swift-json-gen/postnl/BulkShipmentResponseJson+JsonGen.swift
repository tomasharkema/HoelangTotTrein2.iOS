//
//  BulkShipmentResponseJson+JsonGen.swift
//
//  Auto generated by swift-json-gen on Thu, 06 Aug 2015 13:12:53 GMT
//

import Foundation

extension BulkShipmentResponseJson {
  static func decodeJson(json: AnyObject) -> BulkShipmentResponseJson? {
    guard let dict = json as? [String : AnyObject] else {
      assertionFailure("json not a dictionary");
      return nil
    }

    guard let shipments_field: AnyObject? = dict["shipments"] else {
      assertionFailure("field 'shipments' is missing")
      return nil
    }
    guard let shipments: [BulkShipmentItem] = Array.decodeJson({ BulkShipmentItem.decodeJson($0) }, shipments_field!) else {
      assertionFailure("field 'shipments' is not a [BulkShipmentItem]")
      return nil
    }

    return BulkShipmentResponseJson(shipments: shipments)
  }

  func encodeJson() -> AnyObject {
    var dict: [String: AnyObject] = [:]

    dict["shipments"] = shipments.encodeJson({ $0.encodeJson() })

    return dict
  }
}

extension BulkShipmentItem {
  static func decodeJson(json: AnyObject) -> BulkShipmentItem? {
    guard let dict = json as? [String : AnyObject] else {
      assertionFailure("json not a dictionary");
      return nil
    }

    guard let searchResult_field: AnyObject? = dict["searchResult"] else {
      assertionFailure("field 'searchResult' is missing")
      return nil
    }
    guard let searchResult: String = String.decodeJson(searchResult_field!) else {
      assertionFailure("field 'searchResult' is not a String")
      return nil
    }

    let details_field: AnyObject? = dict["details"]
    let details: AnyObject? = details_field == nil ? nil : Optional.decodeJson({ $0 as AnyObject }, details_field!)

    return BulkShipmentItem(searchResult: searchResult, details: details)
  }

  func encodeJson() -> AnyObject {
    var dict: [String: AnyObject] = [:]

    dict["searchResult"] = searchResult.encodeJson()
    dict["details"] = details.encodeJson({ $0 })

    return dict
  }
}
