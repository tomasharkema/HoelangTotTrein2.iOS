//
//  MailboxResponseJson+JsonGen.swift
//
//  Auto generated by swift-json-gen on Thu, 06 Aug 2015 13:12:53 GMT
//

import Foundation

extension MailboxResponseJson {
  static func decodeJson(json: AnyObject) -> MailboxResponseJson? {
    guard let dict = json as? [String : AnyObject] else {
      assertionFailure("json not a dictionary");
      return nil
    }

    guard let requestedOn_field: AnyObject? = dict["requestedOn"] else {
      assertionFailure("field 'requestedOn' is missing")
      return nil
    }
    guard let requestedOn: String = String.decodeJson(requestedOn_field!) else {
      assertionFailure("field 'requestedOn' is not a String")
      return nil
    }

    guard let shipments_field: AnyObject? = dict["shipments"] else {
      assertionFailure("field 'shipments' is missing")
      return nil
    }
    guard let shipments: [[String : AnyObject]] = Array.decodeJson({ $0 as? JsonObject }, shipments_field!) else {
      assertionFailure("field 'shipments' is not a [[String : AnyObject]]")
      return nil
    }

    return MailboxResponseJson(requestedOn: requestedOn, shipments: shipments)
  }

  func encodeJson() -> AnyObject {
    var dict: [String: AnyObject] = [:]

    dict["requestedOn"] = requestedOn.encodeJson()
    dict["shipments"] = shipments.encodeJson({ $0.encodeJson({ $0.encodeJson() }, { $0 }) })

    return dict
  }
}
